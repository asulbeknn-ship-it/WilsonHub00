--[[
Made by @Nurgazy_21 tg: nurr_wilson
Script name: WilsonHub
version script: 1.1.0
]]

-- –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- ================================================================= --
-- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ß–ê–¢–ê
-- –î–æ–±–∞–≤–ª–µ–Ω–æ 3 —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã 24/7.
-- ================================================================= --
local CHAT_SETTINGS = {
	API_BACKENDS = {
		"https://wilson-hub-chat-backend.glitch.me",
		"https://wilson-hub-chat-mirror1.glitch.me",
		"https://wilson-hub-chat-mirror2.glitch.me"
	},
	PollRate = 5 -- –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
}
local current_backend_index = 1
-- ================================================================= --

-- [[ THEMES, LANGUAGES & SETTINGS ]]
local Themes = {
	Red = { main = Color3.fromRGB(200, 0, 0), accent = Color3.fromRGB(255, 0, 0), text = Color3.fromRGB(255, 255, 255) },
	Yellow = { main = Color3.fromRGB(255, 190, 0), accent = Color3.fromRGB(255, 220, 50), text = Color3.fromRGB(0,0,0) },
	Blue = { main = Color3.fromRGB(0, 120, 255), accent = Color3.fromRGB(50, 150, 255), text = Color3.fromRGB(255,255,255) },
	Green = { main = Color3.fromRGB(0, 180, 0), accent = Color3.fromRGB(50, 220, 50), text = Color3.fromRGB(255,255,255) },
	White = { main = Color3.fromRGB(240, 240, 240), accent = Color3.fromRGB(200, 200, 200), text = Color3.fromRGB(0, 0, 0) }
}
local settings = {
	theme = "Red",
	language = "English"
}

-- –ó–ê–ì–†–£–ó–ö–ê –ù–ê–°–¢–†–û–ï–ö
if isfile and isfile("WilsonHubSettings.json")then
	pcall(function()
		local decoded_settings = HttpService:JSONDecode(readfile("WilsonHubSettings.json"))
		if type(decoded_settings) == "table" then
			for k, v in pairs(decoded_settings) do
				settings[k] = v
			end
		end
	end)
end

local currentTheme = Themes[settings.theme] or Themes.Red
local player = Players.LocalPlayer

-- [[ LANGUAGE SYSTEM ]]
local languageMap = {
	English = "en",
	Russian = "ru",
	Kazakh = "kz",
	Chinese = "zh",
	French = "fr"
}
local translations = {
	-- GENERAL & COMMON BUTTONS
	on = { en = "ON", ru = "–í–ö–õ", kz = "“ö–û–°–£–õ–´", zh = "ÂºÄ", fr = "ACTIF" },
	off = { en = "OFF", ru = "–í–´–ö–õ", kz = "”®–®–Ü–†–£–õ–Ü", zh = "ÂÖ≥", fr = "INACTIF" },
	apply = { en = "Apply", ru = "–ü—Ä–∏–º–µ–Ω–∏—Ç—å", kz = "“ö–æ–ª–¥–∞–Ω—É", zh = "Â∫îÁî®", fr = "Appliquer" },
	reset = { en = "Reset", ru = "–°–±—Ä–æ—Å", kz = "–´—Å—ã—Ä—É", zh = "ÈáçÁΩÆ", fr = "R√©initialiser" },
	execute = { en = "EXECUTE", ru = "–í–´–ü–û–õ–ù–ò–¢–¨", kz = "–û–†–´–ù–î–ê–£", zh = "ÊâßË°å", fr = "EX√âCUTER" },
	clear = { en = "CLEAR", ru = "–û–ß–ò–°–¢–ò–¢–¨", kz = "–¢–ê–ó–ê–õ–ê–£", zh = "Ê∏ÖÈô§", fr = "EFFACER" },
	send = { en = "Send", ru = "–û—Ç–ø—Ä.", kz = "–ñ—ñ–±–µ—Ä—É", zh = "ÂèëÈÄÅ", fr = "Envoyer" },
	-- LOADING SCREEN
	loading = { en = "Loading", ru = "–ó–∞–≥—Ä—É–∑–∫–∞", kz = "–ñ“Ø–∫—Ç–µ–ª—É–¥–µ", zh = "Âä†ËΩΩ‰∏≠", fr = "Chargement" },
	-- MAIN GUI
	main_title = { en = "HACK WILSONHUB SCRIPTS FOR ROBLOX (V1.1.0)", ru = "HACK WILSONHUB SCRIPTS –î–õ–Ø ROBLOX (V1.1.0)", kz = "ROBLOX “Æ–®–Ü–ù WILSONHUB SCRIPTS –•–ê–ì–´ (V1.1.0)", zh = "ROBLOXÁâàWILSONHUBËÑöÊú¨ÈªëÂÆ¢Â∑•ÂÖ∑ (V1.1.0)", fr = "HACK WILSONHUB SCRIPTS POUR ROBLOX (V1.1.0)" },
	close_button = { en = "X", ru = "X", kz = "X", zh = "X", fr = "X" },
	-- TABS
	tab_home = { en = "HOME", ru = "–ì–õ–ê–í–ù–ê–Ø", kz = "–ë–ê–°–¢–´", zh = "‰∏ªÈ°µ", fr = "ACCUEIL" },
	tab_scripts = { en = "SCRIPT'S", ru = "–°–ö–†–ò–ü–¢–´", kz = "–°–ö–†–ò–ü–¢–¢–ï–†", zh = "ËÑöÊú¨", fr = "SCRIPTS" },
    
    -- ============================================================= --
    -- [+] –ù–ê–ß–ê–õ–û –ù–û–í–û–ì–û –ö–û–î–ê: –ü–ï–†–ï–í–û–î–´ –î–õ–Ø –í–ö–õ–ê–î–ö–ò SKINS
    -- ============================================================= --
	tab_skins = { en = "SKINS", ru = "–°–ö–ò–ù–´", kz = "–°–ö–ò–ù–î–ï–†", zh = "ÁöÆËÇ§", fr = "SKINS" },
	skin_coolkidd = { en = "SKIN C00LKIDD", ru = "–°–ö–ò–ù C00LKIDD", kz = "C00LKIDD –°–ö–ò–ù–Ü", zh = "C00LKIDD ÁöÆËÇ§", fr = "SKIN C00LKIDD" },
	skin_johndoe = { en = "SKIN JOHNDOE", ru = "–°–ö–ò–ù JOHNDOE", kz = "JOHNDOE –°–ö–ò–ù–Ü", zh = "JOHNDOE ÁöÆËÇ§", fr = "SKIN JOHNDOE" },
	skin_hack_wilson = { en = "SKIN HACK_WILSON", ru = "–°–ö–ò–ù HACK_WILSON", kz = "HACK_WILSON –°–ö–ò–ù–Ü", zh = "HACK_WILSON ÁöÆËÇ§", fr = "SKIN HACK_WILSON" },
    -- ============================================================= --
    -- [+] –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ö–û–î–ê
    -- ============================================================= --
    
	tab_info = { en = "INFO", ru = "–ò–ù–§–û", kz = "–ê“ö–ü–ê–†–ê–¢", zh = "‰ø°ÊÅØ", fr = "INFOS" },
	tab_guimods = { en = "GUI MODS", ru = "–ú–û–î–´ GUI", kz = "GUI –ú–û–î–¢–ê–†–´", zh = "ÁïåÈù¢Ê®°ÁªÑ", fr = "MODS GUI" },
	tab_players = { en = "PLAYERS", ru = "–ò–ì–†–û–ö–ò", kz = "–û–ô–´–ù–®–´–õ–ê–†", zh = "Áé©ÂÆ∂", fr = "JOUEURS" },
	tab_commands = { en = "COMMANDS", ru = "–ö–û–ú–ê–ù–î–´", kz = "–ö–û–ú–ê–ù–î–ê–õ–ê–†", zh = "ÂëΩ‰ª§", fr = "COMMANDES" },
	tab_chat = { en = "PLAYERS CHAT", ru = "–ß–ê–¢ –ò–ì–†–û–ö–û–í", kz = "–û–ô–´–ù–®–´–õ–ê–† –ß–ê–¢–´", zh = "Áé©ÂÆ∂ËÅäÂ§©", fr = "CHAT JOUEURS" },
	tab_settings = { en = "SETTINGS", ru = "–ù–ê–°–¢–†–û–ô–ö–ò", kz = "–ë–ê–ü–¢–ê–£–õ–ê–†", zh = "ËÆæÁΩÆ", fr = "R√âGLAGES" },
	tab_executor = { en = "EXECUTOR", ru = "–ò–°–ü–û–õ–ù–ò–¢–ï–õ–¨", kz = "–û–†–´–ù–î–ê–£–®–´", zh = "ÊâßË°åÂô®", fr = "EX√âCUTEUR" },
	-- HOME PAGE
	home_welcome = { en = "Welcome, %s", ru = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s", kz = "“ö–æ—à –∫–µ–ª–¥—ñ“£, %s", zh = "Ê¨¢Ëøé, %s", fr = "Bienvenue, %s" },
	home_nickname = { en = "NickName: %s", ru = "–ù–∏–∫–Ω–µ–π–º: %s", kz = "–õ–∞“õ–∞–ø –∞—Ç—ã: %s", zh = "ÊòµÁß∞: %s", fr = "Surnom: %s" },
	home_userid = { en = "ID account: %s", ru = "ID –∞–∫–∫–∞—É–Ω—Ç–∞: %s", kz = "–ê–∫–∫–∞—É–Ω—Ç ID: %s", zh = "Ë¥¶Êà∑ID: %s", fr = "ID du compte: %s" },
	home_userage = { en = "lvl account: %s", ru = "–í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞: %s", kz = "–ê–∫–∫–∞—É–Ω—Ç –∂–∞—Å—ã: %s", zh = "Ë¥¶Êà∑Âπ¥ÈæÑ: %s", fr = "√Çge du compte: %s" },
	home_creationdate = { en = "Creation Date: %s", ru = "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: %s", kz = "“ö“±—Ä—ã–ª“ì–∞–Ω –∫“Ø–Ω—ñ: %s", zh = "ÂàõÂª∫Êó•Êúü: %s", fr = "Date de cr√©ation: %s" },
	home_creationdate_loading = { en = "Creation Date: Loading...", ru = "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: –ó–∞–≥—Ä—É–∑–∫–∞...", kz = "“ö“±—Ä—ã–ª“ì–∞–Ω –∫“Ø–Ω—ñ: –ñ“Ø–∫—Ç–µ–ª—É–¥–µ...", zh = "ÂàõÂª∫Êó•Êúü: Âä†ËΩΩ‰∏≠...", fr = "Date de cr√©ation: Chargement..." },
	home_device = { en = "Device: %s", ru = "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: %s", kz = "“ö“±—Ä—ã–ª“ì—ã: %s", zh = "ËÆæÂ§á: %s", fr = "Appareil: %s" },
	home_device_phone = { en = "Phone/Tablet", ru = "–¢–µ–ª–µ—Ñ–æ–Ω/–ü–ª–∞–Ω—à–µ—Ç", kz = "–¢–µ–ª–µ—Ñ–æ–Ω/–ü–ª–∞–Ω—à–µ—Ç", zh = "ÊâãÊú∫/Âπ≥ÊùøÁîµËÑë", fr = "T√©l√©phone/Tablette" },
	home_device_pc = { en = "Computer", ru = "–ö–æ–º–ø—å—é—Ç–µ—Ä", kz = "–ö–æ–º–ø—å—é—Ç–µ—Ä", zh = "ÁîµËÑë", fr = "Ordinateur" },
	home_ip = { en = "IP-address: %s", ru = "IP-–∞–¥—Ä–µ—Å: %s", kz = "IP-–º–µ–∫–µ–Ω–∂–∞–π—ã: %s", zh = "IPÂú∞ÂùÄ: %s", fr = "Adresse IP: %s" },
	home_ip_loading = { en = "IP-address: Loading...", ru = "IP-–∞–¥—Ä–µ—Å: –ó–∞–≥—Ä—É–∑–∫–∞...", kz = "IP-–º–µ–∫–µ–Ω–∂–∞–π—ã: –ñ“Ø–∫—Ç–µ–ª—É–¥–µ...", zh = "IPÂú∞ÂùÄ: Âä†ËΩΩ‰∏≠...", fr = "Adresse IP: Chargement..." },
	home_country = { en = "Country: %s", ru = "–°—Ç—Ä–∞–Ω–∞: %s", kz = "–ï–ª: %s", zh = "ÂõΩÂÆ∂: %s", fr = "Pays: %s" },
	home_country_loading = { en = "Country: Loading...", ru = "–°—Ç—Ä–∞–Ω–∞: –ó–∞–≥—Ä—É–∑–∫–∞...", kz = "–ï–ª: –ñ“Ø–∫—Ç–µ–ª—É–¥–µ...", zh = "ÂõΩÂÆ∂: Âä†ËΩΩ‰∏≠...", fr = "Pays: Chargement..." },
	-- INFO PAGE
	info_bio = { en = "üëãHello, my name is Nurgazy,\n I live in Kazakhstan, and\n I am a young hacker and scripter\n who is just starting out.\n My scripts are high-quality\n and beautiful. Everything is real.", ru = "üëã–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ù—É—Ä–≥–∞–∑—ã,\n —è –∂–∏–≤—É –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ, –∏\n —è –º–æ–ª–æ–¥–æ–π –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Ö–∞–∫–µ—Ä –∏ —Å–∫—Ä–∏–ø—Ç–µ—Ä.\n –ú–æ–∏ —Å–∫—Ä–∏–ø—Ç—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ\n –∏ –∫—Ä–∞—Å–∏–≤—ã–µ. –í—Å–µ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É.", kz = "üëã–°”ô–ª–µ–º, –º–µ–Ω—ñ“£ –∞—Ç—ã–º –ù“±—Ä“ì–∞–∑—ã,\n –º–µ–Ω “ö–∞–∑–∞“õ—Å—Ç–∞–Ω–¥–∞ —Ç“±—Ä–∞–º—ã–Ω, –∂”ô–Ω–µ\n –º–µ–Ω –∂–∞—Å —Ö–∞–∫–µ—Ä ”ô—Ä—ñ –±–∞—Å—Ç–∞—É—à—ã —Å–∫—Ä–∏–ø—Ç–µ—Ä–º—ñ–Ω.\n –ú–µ–Ω—ñ“£ —Å–∫—Ä–∏–ø—Ç–µ—Ä—ñ–º —Å–∞–ø–∞–ª—ã\n –∂”ô–Ω–µ ”ô–¥–µ–º—ñ. –ë–∞—Ä–ª—ã“ì—ã —à—ã–Ω–∞–π—ã.", zh = "üëã‰Ω†Â•ΩÔºåÊàëÂè´NurgazyÔºå\nÊàë‰ΩèÂú®ÂìàËê®ÂÖãÊñØÂù¶Ôºå\nÊàëÊòØ‰∏Ä‰∏™ÂàöËµ∑Ê≠•ÁöÑÂπ¥ËΩªÈªëÂÆ¢ÂíåËÑöÊú¨ÁºñÂÜôËÄÖ„ÄÇ\nÊàëÁöÑËÑöÊú¨Ë¥®ÈáèÈ´ò‰∏îÁæéËßÇ„ÄÇ\n‰∏ÄÂàáÈÉΩÊòØÁúüÂÆûÁöÑ„ÄÇ", fr = "üëãBonjour, je m'appelle Nurgazy,\n j'habite au Kazakhstan, et\n je suis un jeune hacker et scripteur\n qui d√©bute √† peine.\n Mes scripts sont de haute qualit√©\n et beaux. Tout est r√©el." },
	info_profile = { en = "MY PROFILE", ru = "–ú–û–ô –ü–†–û–§–ò–õ–¨", kz = "–ú–ï–ù–Ü“¢ –ü–†–û–§–ò–õ–Ü–ú", zh = "ÊàëÁöÑ‰∏™‰∫∫ËµÑÊñô", fr = "MON PROFIL" },
	info_discord = { en = "DISCORD", ru = "–î–ò–°–ö–û–†–î", kz = "–î–ò–°–ö–û–†–î", zh = "DISCORD", fr = "DISCORD" },
	info_channel = { en = "CHANNEL", ru = "–ö–ê–ù–ê–õ", kz = "–ê–†–ù–ê", zh = "È¢ëÈÅì", fr = "CHA√éNE" },
	info_vk = { en = "VKONTAKTE", ru = "–í–ö–û–ù–¢–ê–ö–¢–ï", kz = "–í–ö–û–ù–¢–ê–ö–¢–ï", zh = "VKONTAKTE", fr = "VKONTAKTE" },
	info_website = { en = "WEBSITE", ru = "–í–ï–ë-–°–ê–ô–¢", kz = "–í–ï–ë-–°–ê–ô–¢", zh = "ÁΩëÁ´ô", fr = "SITE WEB" },
	-- GUI MODS PAGE
	mod_healthbar = { en = "Custom Healthbar", ru = "–ö–∞—Å—Ç–æ–º–Ω—ã–π –•–µ–ª—Å–±–∞—Ä", kz = "–ñ–µ–∫–µ –î–µ–Ω—Å–∞—É–ª—ã“õ –ñ–æ–ª–∞“ì—ã", zh = "Ëá™ÂÆö‰πâÁîüÂëΩÊù°", fr = "Barre de vie perso" },
	mod_fpsping = { en = "FPS/Ping Display", ru = "–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ FPS/–ü–∏–Ω–≥–∞", kz = "FPS/–ü–∏–Ω–≥ –ö”©—Ä—Å–µ—Ç–∫—ñ—à—ñ", zh = "ÊòæÁ§∫FPS/Âª∂Ëøü", fr = "Affichage FPS/Ping" },
	mod_worldcolor = { en = "World Color Changer", ru = "–°–º–µ–Ω–∞ –¶–≤–µ—Ç–∞ –ú–∏—Ä–∞", kz = "”ò–ª–µ–º –¢“Ø—Å—ñ–Ω ”®–∑–≥–µ—Ä—Ç–∫—ñ—à", zh = "‰∏ñÁïåÈ¢úËâ≤ÂèòÊç¢Âô®", fr = "Changeur de couleur du monde" },
	mod_rainbow = { en = "Rainbow", ru = "–†–∞–¥—É–≥–∞", kz = "–ö–µ–º–ø—ñ—Ä“õ–æ—Å–∞“õ", zh = "ÂΩ©Ëôπ", fr = "Arc-en-ciel" },
	-- SCRIPTS PAGE
	search_placeholder = { en = "Search scripts...", ru = "–ü–æ–∏—Å–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤...", kz = "–°–∫—Ä–∏–ø—Ç—Ç–µ—Ä–¥—ñ —ñ–∑–¥–µ—É...", zh = "ÊêúÁ¥¢ËÑöÊú¨...", fr = "Rechercher des scripts..." },
	script_fly = { en = "Fly gui ‚òëÔ∏é", ru = "Fly gui ‚òëÔ∏é", kz = "Fly gui ‚òëÔ∏é", zh = "È£ûË°åÁïåÈù¢ ‚òëÔ∏é", fr = "Fly gui ‚òëÔ∏é" },
	script_fireblock = { en = "Fire Block ‚òëÔ∏é", ru = "–û–≥–Ω–µ–Ω–Ω—ã–π –ë–ª–æ–∫ ‚òëÔ∏é", kz = "–û—Ç—Ç—ã –ë–ª–æ–∫ ‚òëÔ∏é", zh = "ÁÅ´ÁÑ∞ÊñπÂùó ‚òëÔ∏é", fr = "Bloc de feu ‚òëÔ∏é" },
	script_speed = { en = "Speed Hack ‚òëÔ∏é", ru = "–°–ø–∏–¥—Ö–∞–∫ ‚òëÔ∏é", kz = "–ñ—ã–ª–¥–∞–º–¥—ã“õ —Ö–∞–≥—ã ‚òëÔ∏é", zh = "ÈÄüÂ∫¶Á†¥Ëß£ ‚òëÔ∏é", fr = "Hack de vitesse ‚òëÔ∏é" },
	script_wallhop = { en = "Wallhop ‚òëÔ∏é", ru = "Wallhop ‚òëÔ∏é", kz = "Wallhop ‚òëÔ∏é", zh = "Áà¨Â¢ô ‚òëÔ∏é", fr = "Wallhop ‚òëÔ∏é" },
	script_clicktp = { en = "Click Teleport ‚òëÔ∏é", ru = "–¢–µ–ª–µ–ø–æ—Ä—Ç –ø–æ –∫–ª–∏–∫—É ‚òëÔ∏é", kz = "–ë–∞—Å—É –∞—Ä“õ—ã–ª—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç ‚òëÔ∏é", zh = "ÁÇπÂáª‰º†ÈÄÅ ‚òëÔ∏é", fr = "T√©l√©portation par clic ‚òëÔ∏é" },
	script_playereesp = { en = "Player ESP ‚òëÔ∏é", ru = "–ï–°–ü –ò–≥—Ä–æ–∫–æ–≤ ‚òëÔ∏é", kz = "–û–π—ã–Ω—à—ã ESP ‚òëÔ∏é", zh = "Áé©ÂÆ∂ÈÄèËßÜ ‚òëÔ∏é", fr = "ESP Joueur ‚òëÔ∏é" },
	-- PLAYERS PAGE
	player_ping = { en = "Ping: %s", ru = "–ü–∏–Ω–≥: %s", kz = "–ü–∏–Ω–≥: %s", zh = "Âª∂Ëøü: %s", fr = "Ping: %s" },
	player_ip = { en = "IP Address: %s", ru = "IP-–∞–¥—Ä–µ—Å: %s", kz = "IP-–º–µ–∫–µ–Ω–∂–∞–π—ã: %s", zh = "IPÂú∞ÂùÄ: %s", fr = "Adresse IP: %s" },
	player_country = { en = "Country: %s", ru = "–°—Ç—Ä–∞–Ω–∞: %s", kz = "–ï–ª: %s", zh = "ÂõΩÂÆ∂: %s", fr = "Pays: %s" },
	player_ip_private = { en = "IP Address: %s", ru = "IP-–∞–¥—Ä–µ—Å: %s", kz = "IP-–º–µ–∫–µ–Ω–∂–∞–π—ã: %s", zh = "IPÂú∞ÂùÄÔºö%s", fr = "Adresse IP: %s" },
	player_country_private = { en = "Country: %s", ru = "–°—Ç—Ä–∞–Ω–∞: %s", kz = "–ï–ª: %s", zh = "ÂõΩÂÆ∂Ôºö%s", fr = "Pays: %s" },
	player_tp = { en = "TP", ru = "–¢–ü", kz = "–¢–ü", zh = "‰º†ÈÄÅ", fr = "TP" },
	player_observe = { en = "Observe", ru = "–ù–∞–±–ª—é–¥–∞—Ç—å", kz = "–ë–∞“õ—ã–ª–∞—É", zh = "ËßÇÂØü", fr = "Observer" },
	-- COMMANDS PAGE
	commands_placeholder = { en = "/command [target] [args]", ru = "/–∫–æ–º–∞–Ω–¥–∞ [—Ü–µ–ª—å] [–∞—Ä–≥—É–º–µ–Ω—Ç—ã]", kz = "/–∫–æ–º–∞–Ω–¥–∞ [–Ω—ã—Å–∞–Ω–∞] [–∞—Ä–≥—É–º–µ–Ω—Ç—Ç–µ—Ä]", zh = "/ÂëΩ‰ª§ [ÁõÆÊ†á] [ÂèÇÊï∞]", fr = "/commande [cible] [args]" },
	-- CHAT PAGE
	chat_title = { en = "Global Chat", ru = "–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ß–∞—Ç", kz = "–ñ–∞–ª–ø—ã –ß–∞—Ç", zh = "ÂÖ®ÁêÉËÅäÂ§©", fr = "Chat Mondial" },
	chat_placeholder = { en = "Enter message...", ru = "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...", kz = "–•–∞–±–∞—Ä–ª–∞–º–∞–Ω—ã –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑...", zh = "ËæìÂÖ•Ê∂àÊÅØ...", fr = "Entrez votre message..." },
	chat_sending = { en = "Sending...", ru = "–û—Ç–ø—Ä–∞–≤–∫–∞...", kz = "–ñ—ñ–±–µ—Ä—ñ–ª—É–¥–µ...", zh = "ÂèëÈÄÅ‰∏≠...", fr = "Envoi..." },
	chat_you = { en = "You", ru = "–í—ã", kz = "–°—ñ–∑", zh = "‰Ω†", fr = "Vous" },
	chat_loading = { en = "<font color='#AAAAAA'><i>Loading messages...</i></font>", ru = "<font color='#AAAAAA'><i>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...</i></font>", kz = "<font color='#AAAAAA'><i>–•–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä –∂“Ø–∫—Ç–µ–ª—É–¥–µ...</i></font>", zh = "<font color='#AAAAAA'><i>Âä†ËΩΩÊ∂àÊÅØ‰∏≠...</i></font>", fr = "<font color='#AAAAAA'><i>Chargement des messages...</i></font>" },
	chat_error_fetch = { en = "<font color='#FF5555'>Chat Error: %s</font>", ru = "<font color='#FF5555'>–û—à–∏–±–∫–∞ —á–∞—Ç–∞: %s</font>", kz = "<font color='#FF5555'>–ß–∞—Ç “õ–∞—Ç–µ—Å—ñ: %s</font>", zh = "<font color='#FF5555'>ËÅäÂ§©ÈîôËØØ: %s</font>", fr = "<font color='#FF5555'>Erreur du chat: %s</font>" },
	chat_error_decode = { en = "<font color='#FF5555'>Error decoding server response.</font>", ru = "<font color='#FF5555'>–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞.</font>", kz = "<font color='#FF5555'>–°–µ—Ä–≤–µ—Ä –∂–∞—É–∞–±—ã–Ω –¥–µ–∫–æ–¥—Ç–∞—É “õ–∞—Ç–µ—Å—ñ.</font>", zh = "<font color='#FF5555'>Ëß£Á†ÅÊúçÂä°Âô®ÂìçÂ∫îÊó∂Âá∫Èîô„ÄÇ</font>", fr = "<font color='#FF5555'>Erreur de d√©codage de la r√©ponse du serveur.</font>" },
	chat_no_messages = { en = "<font color='#AAAAAA'><i>No new messages. Say hi!</i></font>", ru = "<font color='#AAAAAA'><i>–ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∑–¥–æ—Ä–æ–≤–∞–π—Ç–µ—Å—å!</i></font>", kz = "<font color='#AAAAAA'><i>–ñ–∞“£–∞ —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä –∂–æ“õ. –°”ô–ª–µ–º–¥–µ—Å—ñ“£—ñ–∑!</i></font>", zh = "<font color='#AAAAAA'><i>Ê≤°ÊúâÊñ∞Ê∂àÊÅØ„ÄÇÊâì‰∏™ÊãõÂëºÂêßÔºÅ</i></font>", fr = "<font color='#AAAAAA'><i>Aucun nouveau message. Dites bonjour !</i></font>" },
	chat_error_send = { en = "<font color='#FF5555'>Error: Could not send message. %s</font>", ru = "<font color='#FF5555'>–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. %s</font>", kz = "<font color='#FF5555'>“ö–∞—Ç–µ: –•–∞–±–∞—Ä–ª–∞–º–∞–Ω—ã –∂—ñ–±–µ—Ä—É –º“Ø–º–∫—ñ–Ω –±–æ–ª–º–∞–¥—ã. %s</font>", zh = "<font color='#FF5555'>ÈîôËØØÔºöÊó†Ê≥ïÂèëÈÄÅÊ∂àÊÅØ„ÄÇ %s</font>", fr = "<font color='#FF5555'>Erreur: Impossible d'envoyer le message. %s</font>" },
	-- SETTINGS PAGE
	settings_themes_title = { en = "Themes", ru = "–¢–µ–º—ã", kz = "–¢–∞“õ—ã—Ä—ã–ø—Ç–∞—Ä", zh = "‰∏ªÈ¢ò", fr = "Th√®mes" },
	theme_red = { en = "Red (Default)", ru = "–ö—Ä–∞—Å–Ω–∞—è (–ü–æ —É–º–æ–ª—á.)", kz = "“ö—ã–∑—ã–ª (–°—Ç–∞–Ω–¥–∞—Ä—Ç—Ç—ã)", zh = "Á∫¢Ëâ≤ÔºàÈªòËÆ§Ôºâ", fr = "Rouge (D√©faut)" },
	theme_yellow = { en = "Yellow", ru = "–ñ–µ–ª—Ç–∞—è", kz = "–°–∞—Ä—ã", zh = "ÈªÑËâ≤", fr = "Jaune" },
	theme_blue = { en = "Blue", ru = "–°–∏–Ω—è—è", kz = "–ö”©–∫", zh = "ËìùËâ≤", fr = "Bleu" },
	theme_green = { en = "Green", ru = "–ó–µ–ª–µ–Ω–∞—è", kz = "–ñ–∞—Å—ã–ª", zh = "ÁªøËâ≤", fr = "Vert" },
	theme_white = { en = "White", ru = "–ë–µ–ª–∞—è", kz = "–ê“õ", zh = "ÁôΩËâ≤", fr = "Blanc" },
	theme_rainbow = { en = "Rainbow", ru = "–†–∞–¥—É–≥–∞", kz = "–ö–µ–º–ø—ñ—Ä“õ–æ—Å–∞“õ", zh = "ÂΩ©Ëôπ", fr = "Arc-en-ciel" },
	settings_language_title = { en = "Type languages", ru = "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", kz = "–¢—ñ–ª–¥–µ—Ä–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑", zh = "ÈÄâÊã©ËØ≠Ë®Ä", fr = "Choisir la langue" },
	lang_en = { en = "English", ru = "English", kz = "English", zh = "English", fr = "English" },
	lang_ru = { en = "Russian", ru = "–†—É—Å—Å–∫–∏–π", kz = "–†—É—Å—Å–∫–∏–π", zh = "–†—É—Å—Å–∫–∏–π", fr = "–†—É—Å—Å–∫–∏–π" },
	lang_kz = { en = "Kazakh", ru = "–ö–∞–∑–∞—Ö—Å–∫–∏–π", kz = "“ö–∞–∑–∞“õ—à–∞", zh = "–ö–∞–∑–∞—Ö—Å–∫–∏–π", fr = "–ö–∞–∑–∞—Ö—Å–∫–∏–π" },
	lang_zh = { en = "Chinese", ru = "–ö–∏—Ç–∞–π—Å–∫–∏–π", kz = "–ö–∏—Ç–∞–π—Å–∫–∏–π", zh = "‰∏≠Êñá", fr = "–ö–∏—Ç–∞–π—Å–∫–∏–π" },
	lang_fr = { en = "French", ru = "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π", kz = "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π", zh = "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π", fr = "Fran√ßais" },
	-- EXECUTOR PAGE
	executor_placeholder = { en = "--[[ Paste your script here ]]--", ru = "--[[ –í—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Å–∫—Ä–∏–ø—Ç —Å—é–¥–∞ ]]--", kz = "--[[ –°–∫—Ä–∏–ø—Ç—ñ“£—ñ–∑–¥—ñ –æ—Å—ã –∂–µ—Ä–≥–µ “õ–æ–π—ã“£—ã–∑ ]]--", zh = "--[[ Âú®Ê≠§Â§ÑÁ≤òË¥¥ÊÇ®ÁöÑËÑöÊú¨ ]]--", fr = "--[[ Collez votre script ici ]]--" },
	-- NOTIFICATIONS
	notif_esp_title = { en = "ESP", ru = "–ï–°–ü", kz = "–ï–°–ü", zh = "ÈÄèËßÜ", fr = "ESP" },
	notif_esp_enabled_text = { en = "Player ESP has been enabled.", ru = "–ï–°–ü –∏–≥—Ä–æ–∫–æ–≤ –≤–∫–ª—é—á–µ–Ω–æ.", kz = "–û–π—ã–Ω—à—ã ESP “õ–æ—Å—ã–ª–¥—ã.", zh = "Áé©ÂÆ∂ÈÄèËßÜÂ∑≤ÂêØÁî®„ÄÇ", fr = "L'ESP des joueurs a √©t√© activ√©." },
	notif_esp_disabled_text = { en = "Player ESP has been disabled.", ru = "–ï–°–ü –∏–≥—Ä–æ–∫–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω–æ.", kz = "–û–π—ã–Ω—à—ã ESP ”©—à—ñ—Ä—ñ–ª–¥—ñ.", zh = "Áé©ÂÆ∂ÈÄèËßÜÂ∑≤Á¶ÅÁî®„ÄÇ", fr = "L'ESP des joueurs a √©t√© d√©sactiv√©." },
	notif_clipboard_title = { en = "WilsonHub", ru = "WilsonHub", kz = "WilsonHub", zh = "WilsonHub", fr = "WilsonHub" },
	notif_clipboard_text = { en = "Link to %s copied!", ru = "–°—Å—ã–ª–∫–∞ –Ω–∞ %s —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!", kz = "%s —Å—ñ–ª—Ç–µ–º–µ—Å—ñ –∫”©—à—ñ—Ä—ñ–ª–¥—ñ!", zh = "Â∑≤Â§çÂà∂Âà∞ %s ÁöÑÈìæÊé•ÔºÅ", fr = "Lien vers %s copi√© !" },
	notif_clipboard_error = { en = "WilsonHub Error", ru = "–û—à–∏–±–∫–∞ WilsonHub", kz = "WilsonHub “õ–∞—Ç–µ—Å—ñ", zh = "WilsonHubÈîôËØØ", fr = "Erreur WilsonHub" },
	notif_clipboard_error_text = { en = "Function setclipboard not found.", ru = "–§—É–Ω–∫—Ü–∏—è setclipboard –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", kz = "setclipboard —Ñ—É–Ω–∫—Ü–∏—è—Å—ã —Ç–∞–±—ã–ª–º–∞–¥—ã.", zh = "Êú™ÊâæÂà∞ÂáΩÊï∞ setclipboard„ÄÇ", fr = "Fonction setclipboard non trouv√©e." },
	notif_speed_title = { en = "Speed Hack", ru = "–°–ø–∏–¥—Ö–∞–∫", kz = "–ñ—ã–ª–¥–∞–º–¥—ã“õ —Ö–∞–≥—ã", zh = "ÈÄüÂ∫¶Á†¥Ëß£", fr = "Hack de vitesse" },
	notif_speed_text = { en = "Speed increased to 50.", ru = "–°–∫–æ—Ä–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞ –¥–æ 50.", kz = "–ñ—ã–ª–¥–∞–º–¥—ã“õ 50-–≥–µ –¥–µ–π—ñ–Ω –∞—Ä—Ç—Ç—ã.", zh = "ÈÄüÂ∫¶ÊèêÂçáËá≥50„ÄÇ", fr = "Vitesse augment√©e √† 50." },
	notif_clicktp_title = { en = "Click Teleport", ru = "–¢–µ–ª–µ–ø–æ—Ä—Ç –ø–æ –∫–ª–∏–∫—É", kz = "–ë–∞—Å—É –∞—Ä“õ—ã–ª—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç", zh = "ÁÇπÂáª‰º†ÈÄÅ", fr = "T√©l√©portation par clic" },
	notif_clicktp_text = { en = "Activated. Click to teleport.", ru = "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ. –ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏.", kz = "–ë–µ–ª—Å–µ–Ω–¥—ñ—Ä—ñ–ª–¥—ñ. –¢–µ–ª–µ–ø–æ—Ä—Ç—Ç–∞—É “Ø—à—ñ–Ω –±–∞—Å—ã“£—ã–∑.", zh = "Â∑≤ÊøÄÊ¥ª„ÄÇÁÇπÂáªËøõË°å‰º†ÈÄÅ„ÄÇ", fr = "Activ√©. Cliquez pour vous t√©l√©porter." },
	notif_esp_legacy_title = { en = "ESP", ru = "–ï–°–ü", kz = "–ï–°–ü", zh = "ÈÄèËßÜ", fr = "ESP" },
	notif_esp_legacy_text = { en = "ESP activated.", ru = "–ï–°–ü –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.", kz = "–ï–°–ü –±–µ–ª—Å–µ–Ω–¥—ñ—Ä—ñ–ª–¥—ñ.", zh = "ÈÄèËßÜÂ∑≤ÊøÄÊ¥ª„ÄÇ", fr = "ESP activ√©." },
	notif_executor_error_title = { en = "Executor Error", ru = "–û—à–∏–±–∫–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", kz = "–û—Ä—ã–Ω–¥–∞—É—à—ã “õ–∞—Ç–µ—Å—ñ", zh = "ÊâßË°åÂô®ÈîôËØØ", fr = "Erreur de l'ex√©cuteur" },
	notif_fatal_error_title = { en = "WILSONHUB FATAL ERROR", ru = "–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê WILSONHUB", kz = "WILSONHUB –ö–†–ò–¢–ò–ö–ê–õ–´“ö “ö–ê–¢–ï–°–Ü", zh = "WILSONHUB Ëá¥ÂëΩÈîôËØØ", fr = "ERREUR FATALE WILSONHUB" },
	notif_fatal_error_text = { en = "UI failed to load. Error: %s", ru = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å UI. –û—à–∏–±–∫–∞: %s", kz = "UI –∂“Ø–∫—Ç–µ–ª–º–µ–¥—ñ. “ö–∞—Ç–µ: %s", zh = "UIÂä†ËΩΩÂ§±Ë¥•„ÄÇÈîôËØØ: %s", fr = "√âchec du chargement de l'IU. Erreur: %s" },
	notif_welcome_title = { en = "WILSON UPLOADEDüéÆ!", ru = "WILSON –ó–ê–ì–†–£–ñ–ï–ùüéÆ!", kz = "WILSON –ñ“Æ–ö–¢–ï–õ–î–ÜüéÆ!", zh = "WILSON Â∑≤Âä†ËΩΩüéÆ!", fr = "WILSON CHARG√âüéÆ!" },
	notif_welcome_text = { en = "This script is for Wilson hackers", ru = "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ö–∞–∫–µ—Ä–æ–≤ Wilson", kz = "–ë“±–ª —Å–∫—Ä–∏–ø—Ç Wilson —Ö–∞–∫–µ—Ä–ª–µ—Ä—ñ–Ω–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω", zh = "Ê≠§ËÑöÊú¨ÈÄÇÁî®‰∫éWilsonÈªëÂÆ¢", fr = "Ce script est pour les hackers de Wilson" },
	notif_welcome_button = { en = "Yes", ru = "–î–∞", kz = "–ò”ô", zh = "ÊòØ", fr = "Oui" },
}

local themableObjects = {}
local translatableObjects = {}

-- Forward declare
local applyTheme
local activateRainbowTheme
local applyLanguage

applyLanguage = function(langName)
	if not languageMap[langName] then
		langName = "English"
	end
	settings.language = langName
	pcall(function()
		if writefile then
			writefile("WilsonHubSettings.json", HttpService:JSONEncode(settings))
		end
	end)
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –∫–æ –≤—Å–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º
    local langCode = languageMap[settings.language] or "en"
    for _, item in ipairs(translatableObjects) do
        local obj = item.object
        if obj and obj.Parent then
            local key = item.key
            local property = item.property
            local text = (translations[key] and translations[key][langCode]) or (translations[key] and translations[key].en) or key
            obj[property] = text
        end
    end
end

local function sendTranslatedNotification(titleKey, textKey, duration, button1Key, textArgs)
	local langCode = languageMap[settings.language] or "en"
	local title = (translations[titleKey] and translations[titleKey][langCode]) or (translations[titleKey] and translations[titleKey].en) or titleKey
	local text_format = (translations[textKey] and translations[textKey][langCode]) or (translations[textKey] and translations[textKey].en) or textKey
	local text = text_format
	if textArgs then
		pcall(function()
			text = string.format(text_format, unpack(textArgs))
		end)
	end

	-- –¢—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    -- –ù–∞–ø—Ä–∏–º–µ—Ä: StarterGui:SetCore("SendNotification", { Title = title, Text = text, Duration = duration })
end

-- [[ END LANGUAGE SYSTEM ]]

-- [[ THEME SYSTEM ]]
local rainbowThemeActive = false
local rainbowThemeConnection = nil
local activeTab = nil -- Will be set after GUI creation

local function updateRainbowColors()
	if not rainbowThemeActive then return end
	-- –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ä–∞–¥—É–∂–Ω–æ–π —Ç–µ–º—ã
end

activateRainbowTheme = function()
	if rainbowThemeActive and rainbowThemeConnection and rainbowThemeConnection.Connected then return end
	-- –õ–æ–≥–∏–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
end

applyTheme = function(themeName)
	if rainbowThemeConnection then
		rainbowThemeConnection:Disconnect()
		rainbowThemeConnection = nil
	end
	rainbowThemeActive = false
	-- –õ–æ–≥–∏–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
end
--[[ END THEME SYSTEM ]]

-- [[ GUI MODS –§–£–ù–ö–¶–ò–ò –ò–°–ü–†–ê–í–õ–ï–ù–´]]

local customHealthbarGui = nil
local healthbarConnection = nil

function toggleCustomHealthbar(state) if state then if player.Character then createCustomHealthbar(player.Character) end; healthbarConnection = player.CharacterAdded:Connect(createCustomHealthbar) else if customHealthbarGui then customHealthbarGui:Destroy(); customHealthbarGui = nil end; if healthbarConnection then healthbarConnection:Disconnect(); healthbarConnection = nil end end end
function createCustomHealthbar(character) if customHealthbarGui then customHealthbarGui:Destroy() end; local head = character:FindFirstChild("Head"); local humanoid = character:FindFirstChildOfClass("Humanoid"); if not (head and humanoid) then return end; customHealthbarGui = Instance.new("BillboardGui", head); customHealthbarGui.Name = "CustomHealthbarGui"; customHealthbarGui.AlwaysOnTop = true; customHealthbarGui.Size = UDim2.new(0, 150, 0, 40); customHealthbarGui.StudsOffset = Vector3.new(0, 2.5, 0); local healthbar = Instance.new("Frame", customHealthbarGui); healthbar.Name = "Healthbar"; healthbar.Size = UDim2.new(1, 0, 0, 15); healthbar.BackgroundColor3 = Color3.fromRGB(10, 10, 10); healthbar.BorderColor3 = Color3.fromRGB(80, 80, 80); healthbar.BorderSizePixel = 1; Instance.new("UICorner", healthbar).CornerRadius = UDim.new(0, 5); local bar = Instance.new("Frame", healthbar); bar.Name = "Bar"; bar.Size = UDim2.new(1, 0, 1, 0); Instance.new("UICorner", bar).CornerRadius = UDim.new(0, 5); local text = Instance.new("TextLabel", healthbar); text.Name = "Text"; text.Size = UDim2.new(1, 0, 1, 0); text.BackgroundTransparency = 1; text.TextColor3 = Color3.new(1, 1, 1); text.Font = Enum.Font.SourceSansBold; text.TextSize = 12; text.TextStrokeTransparency = 0.5; local function updateHealthbar() if not (humanoid and customHealthbarGui and customHealthbarGui.Parent) then return end; local percentage = humanoid.Health / humanoid.MaxHealth; local color = Color3.fromHSV(0.33 * percentage, 1, 1); bar:TweenSize(UDim2.new(percentage, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true); bar.BackgroundColor3 = color; text.Text = math.floor(humanoid.Health) .. " / " .. humanoid.MaxHealth end; humanoid.HealthChanged:Connect(updateHealthbar); updateHealthbar() end

-- WORLD COLOR CHANGER
local originalColors= {}
local rainbowConnection= nil
local selectedColor= Color3.fromRGB(255, 0, 255)
function applyWorldColor(color) for _, part in ipairs(workspace:GetDescendants()) do if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then local isCharacterPart = false; for _, p in ipairs(Players:GetPlayers()) do if p.Character and part:IsDescendantOf(p.Character) then isCharacterPart = true; break end end; if not isCharacterPart then if not originalColors[part] then originalColors[part] = part.Color end; part.Color = color end end end end
function resetWorldColors() if rainbowConnection then rainbowConnection:Disconnect(); rainbowConnection = nil end; for part, color in pairs(originalColors) do if part and part.Parent then part.Color = color end end; originalColors = {} end
function toggleRainbowMode(state) if state then if rainbowConnection then rainbowConnection:Disconnect() end; rainbowConnection = RunService.Heartbeat:Connect(function() local hue = tick() % 5 / 5; applyWorldColor(Color3.fromHSV(hue, 1, 1)) end) else if rainbowConnection then rainbowConnection:Disconnect(); rainbowConnection = nil end end end

-- FPS/PING DISPLAY
local statsGui= nil
local statsUpdateConnection= nil
function toggleFpsPing(state) if state then if not (statsGui and statsGui.Parent) then createStatsDisplay() end else if statsGui then statsGui:Destroy(); statsGui = nil end; if statsUpdateConnection then statsUpdateConnection:Disconnect(); statsUpdateConnection = nil end end end
function createStatsDisplay() statsGui = Instance.new("ScreenGui", player.PlayerGui); statsGui.Name = "StatsDisplayGui"; statsGui.ResetOnSpawn = false; statsGui.Enabled = true; statsGui.ZIndexBehavior = Enum.ZIndexBehavior.Global; statsGui.DisplayOrder = 999; local textLabel = Instance.new("TextLabel", statsGui); textLabel.Size = UDim2.new(0, 150, 0, 40); textLabel.Position = UDim2.new(1, -160, 1, -50); textLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20); textLabel.BackgroundTransparency = 0.2; textLabel.BorderSizePixel = 0; textLabel.TextColor3 = Color3.new(1, 1, 1); textLabel.Font = Enum.Font.SourceSansBold; textLabel.TextSize = 16; textLabel.TextXAlignment = Enum.TextXAlignment.Left; textLabel.Text = " FPS: ...\n PING: ..."; Instance.new("UICorner", textLabel).CornerRadius = UDim.new(0, 5); local lastUpdate = 0; local frameCounter = 0; statsUpdateConnection = RunService.Heartbeat:Connect(function(step) frameCounter = frameCounter + 1; local now = tick(); if now - lastUpdate >= 1 then local fps = math.floor(frameCounter / (now - lastUpdate)); local success, ping = pcall(function() return math.floor(player:GetNetworkPing() * 1000) end); if not success then ping = -1 end; textLabel.Text = string.format(" FPS: %d\n PING: %d ms", fps, ping); frameCounter = 0; lastUpdate = now end end) end

-- PLAYER ESP (–ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø)
local espData = { enabled = false, connections = {}, guis = {} }
local function cleanupEspForPlayer(targetPlayer)if espData.guis[targetPlayer] then if espData.guis[targetPlayer].gui and espData.guis[targetPlayer].gui.Parent then espData.guis[targetPlayer].gui:Destroy() end; if espData.guis[targetPlayer].updateConn then espData.guis[targetPlayer].updateConn:Disconnect() end; espData.guis[targetPlayer] = nil end end
local function cleanupAllEsp()for targetPlayer, _ in pairs(espData.guis) do cleanupEspForPlayer(targetPlayer) end; for _, conn in pairs(espData.connections) do conn:Disconnect() end; espData.connections = {}; espData.guis = {} end
local function createEspForPlayer(targetPlayer)if not espData.enabled or targetPlayer == player then return end; local character=targetPlayer.Character; if not character then return end; local head=character:WaitForChild("Head", 1); if not head then return end; cleanupEspForPlayer(targetPlayer); local espGui=Instance.new("BillboardGui", head); espGui.Name="PLAYER_ESP_GUI"; espGui.AlwaysOnTop=true; espGui.Size=UDim2.new(2,0,1.5,0); espGui.StudsOffset=Vector3.new(0,2.5,0); espGui.LightInfluence=0; local mainFrame=Instance.new("Frame", espGui); mainFrame.BackgroundTransparency=1; mainFrame.Size=UDim2.new(1,0,1,0); local box=Instance.new("Frame", mainFrame); box.BackgroundColor3=Color3.fromRGB(255,255,0); box.BackgroundTransparency=0.5; box.BorderSizePixel=0; box.Size=UDim2.new(1,0,1,0); Instance.new("UICorner",box).CornerRadius=UDim.new(0,3); local innerBox=Instance.new("Frame",box); innerBox.BackgroundColor3=Color3.fromRGB(0,0,0); innerBox.BackgroundTransparency=0.3; innerBox.BorderSizePixel=0; innerBox.Size=UDim2.new(1,-2,1,-2); innerBox.Position=UDim2.new(0.5,-innerBox.AbsoluteSize.X/2,0.5,-innerBox.AbsoluteSize.Y/2); Instance.new("UICorner",innerBox).CornerRadius=UDim.new(0,2); local textLabel=Instance.new("TextLabel",mainFrame); textLabel.BackgroundTransparency=1; textLabel.Size=UDim2.new(1,0,1,0); textLabel.Font=Enum.Font.SourceSans; textLabel.TextSize=14; textLabel.TextColor3=Color3.new(1,1,1); textLabel.TextStrokeColor3=Color3.fromRGB(0,0,0); textLabel.TextStrokeTransparency=0; local function update() if not targetPlayer or not targetPlayer.Parent or not character or not character.Parent or not head or not head.Parent then cleanupEspForPlayer(targetPlayer); return end; local distance=(head.Position - workspace.CurrentCamera.CFrame.Position).Magnitude; textLabel.Text = targetPlayer.Name .. "\n[" .. math.floor(distance) .. "m]" end; espData.guis[targetPlayer] = { gui = espGui, updateConn = RunService.RenderStepped:Connect(update) } end
function togglePlayerEsp(state)espData.enabled=state; if espData.enabled then cleanupAllEsp(); for _,p in ipairs(Players:GetPlayers())do createEspForPlayer(p)end; espData.connections.playerAdded=Players.PlayerAdded:Connect(createEspForPlayer); espData.connections.playerRemoving=Players.PlayerRemoving:Connect(cleanupEspForPlayer); sendTranslatedNotification("notif_esp_title", "notif_esp_enabled_text", 5) else cleanupAllEsp(); sendTranslatedNotification("notif_esp_title", "notif_esp_disabled_text", 5) end end

-- 1. –≠–ö–†–ê–ù –ó–ê–ì–†–£–ó–ö–ò
local LoadingGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"));
LoadingGui.Name = "LoadingGui";
LoadingGui.ResetOnSpawn = false;
LoadingGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
local Background = Instance.new("Frame", LoadingGui);
Background.Size = UDim2.new(1, 0, 1, 0);
Background.BackgroundColor3 = Color3.fromRGB(20, 20, 20);
Background.BorderSizePixel = 0
local LoadingLabel = Instance.new("TextLabel", Background);
LoadingLabel.Size = UDim2.new(1, 0, 0, 50);
LoadingLabel.Position = UDim2.new(0, 0, 0.5, -60);
LoadingLabel.BackgroundTransparency = 1;
LoadingLabel.TextColor3 = currentTheme.accent;
LoadingLabel.Font = Enum.Font.SourceSansBold;
LoadingLabel.TextSize = 42;
table.insert(translatableObjects, {object=LoadingLabel, property="Text", key="loading"})
local PercentageLabel = Instance.new("TextLabel", Background);
PercentageLabel.Size = UDim2.new(1, 0, 0, 30);
PercentageLabel.Position = UDim2.new(0, 0, 0.5, 0);
PercentageLabel.BackgroundTransparency = 1;
PercentageLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
PercentageLabel.Font = Enum.Font.SourceSansBold;
PercentageLabel.TextSize = 28;
PercentageLabel.Text = "0 %"
local ProgressBarBG = Instance.new("Frame", Background);
ProgressBarBG.Size = UDim2.new(0, 400, 0, 25);
ProgressBarBG.Position = UDim2.new(0.5, -200, 0.5, 40);
ProgressBarBG.BackgroundColor3 = Color3.fromRGB(10, 10, 10);
ProgressBarBG.BorderSizePixel = 1;
ProgressBarBG.BorderColor3 = currentTheme.main;
Instance.new("UICorner", ProgressBarBG).CornerRadius = UDim.new(0, 8)
local ProgressBarFill = Instance.new("Frame", ProgressBarBG);
ProgressBarFill.Size = UDim2.new(0, 0, 1, 0);
ProgressBarFill.BackgroundColor3 = currentTheme.accent;
Instance.new("UICorner", ProgressBarFill).CornerRadius = UDim.new(0, 8)

if settings.theme == "Rainbow" then
	task.spawn(function()
		while LoadingGui and LoadingGui.Parent do
			local hue = tick() % 2 / 2
			local rainbowColor = Color3.fromHSV(hue, 1, 1)
			if LoadingLabel and LoadingLabel.Parent then LoadingLabel.TextColor3 = rainbowColor end
			if ProgressBarBG and ProgressBarBG.Parent then ProgressBarBG.BorderColor3 = rainbowColor end
			if ProgressBarFill and ProgressBarFill.Parent then ProgressBarFill.BackgroundColor3 = rainbowColor end
			RunService.RenderStepped:Wait()
		end
	end)
end

-- 2. –°–û–ó–î–ê–ù–ò–ï –ì–õ–ê–í–ù–û–ì–û GUI
task.spawn(function()
	local success, err = pcall(function()
		local WilsonHubGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"));
		WilsonHubGui.Name = "WilsonHubGui";
		WilsonHubGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
		WilsonHubGui.ResetOnSpawn = false;
		WilsonHubGui.Enabled = false
		
		local MainFrame = Instance.new("Frame", WilsonHubGui);
		MainFrame.Name = "MainFrame";
		MainFrame.Size = UDim2.new(0, 600, 0, 400);
		MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200);
		MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25);
		MainFrame.BorderSizePixel = 0;
		Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 8)

		-- Header
		local Header = Instance.new("Frame", MainFrame)
		Header.Size = UDim2.new(1, 0, 0, 40)
		Header.BackgroundColor3 = currentTheme.main
		Header.BorderSizePixel = 0
		local HeaderCorner = Instance.new("UICorner", Header)
		HeaderCorner.CornerRadius = UDim.new(0,8)
        
        -- Title
		local TitleLabel = Instance.new("TextLabel", Header)
		TitleLabel.Size = UDim2.new(1, -50, 1, 0)
		TitleLabel.Position = UDim2.new(0, 10, 0, 0)
		TitleLabel.BackgroundTransparency = 1
		TitleLabel.Font = Enum.Font.SourceSansBold
		TitleLabel.TextSize = 16
		TitleLabel.TextColor3 = currentTheme.text
		TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
        table.insert(translatableObjects, {object=TitleLabel, property="Text", key="main_title"})
		
		-- Tabs Container
		local TabsContainer = Instance.new("Frame", MainFrame)
		TabsContainer.Size = UDim2.new(1, 0, 0, 35)
		TabsContainer.Position = UDim2.new(0, 0, 0, 40)
		TabsContainer.BackgroundTransparency = 1
		local TabsLayout = Instance.new("UIListLayout", TabsContainer)
		TabsLayout.FillDirection = Enum.FillDirection.Horizontal
        TabsLayout.Padding = UDim.new(0, 10)
        
		-- Pages Container
		local PagesContainer = Instance.new("Frame", MainFrame)
		PagesContainer.Size = UDim2.new(1, -10, 1, -85)
		PagesContainer.Position = UDim2.new(0.5, -PagesContainer.AbsoluteSize.X/2, 0, 80)
		PagesContainer.BackgroundTransparency = 1
		
		-- ============================================================= --
		-- –°–û–ó–î–ê–ù–ò–ï –í–ö–õ–ê–î–û–ö –ò –°–¢–†–ê–ù–ò–¶
		-- ============================================================= --

		-- HOME
		local HomeTabButton = Instance.new("TextButton", TabsContainer)
		HomeTabButton.Name = "HomeTabButton"
		HomeTabButton.Size = UDim2.new(0, 70, 1, 0)
		HomeTabButton.BackgroundTransparency = 1
		HomeTabButton.Font = Enum.Font.SourceSansBold
		HomeTabButton.TextSize = 14
		table.insert(translatableObjects, {object = HomeTabButton, property = "Text", key = "tab_home"})

		local HomePage = Instance.new("Frame", PagesContainer)
		HomePage.Name = "HomePage"
		HomePage.Size = UDim2.new(1, 0, 1, 0)
		HomePage.BackgroundTransparency = 1
		HomePage.Visible = false
		
		-- SCRIPTS
		local ScriptsTabButton = Instance.new("TextButton", TabsContainer)
		ScriptsTabButton.Name = "ScriptsTabButton"
		ScriptsTabButton.Size = UDim2.new(0, 70, 1, 0)
		ScriptsTabButton.BackgroundTransparency = 1
		ScriptsTabButton.Font = Enum.Font.SourceSansBold
		ScriptsTabButton.TextSize = 14
		table.insert(translatableObjects, {object = ScriptsTabButton, property = "Text", key = "tab_scripts"})
        
		local ScriptsPage = Instance.new("Frame", PagesContainer)
		ScriptsPage.Name = "ScriptsPage"
		ScriptsPage.Size = UDim2.new(1, 0, 1, 0)
		ScriptsPage.BackgroundTransparency = 1
		ScriptsPage.Visible = false
        
		-- ================================================================= --
		-- [+] –ù–ê–ß–ê–õ–û –ù–û–í–û–ì–û –ö–û–î–ê: –í–ö–õ–ê–î–ö–ê –ò –°–¢–†–ê–ù–ò–¶–ê "SKINS"
		-- ================================================================= --
		local SkinsTabButton = Instance.new("TextButton", TabsContainer)
		SkinsTabButton.Name = "SkinsTabButton"
		SkinsTabButton.Size = UDim2.new(0, 70, 1, 0)
		SkinsTabButton.BackgroundTransparency = 1
		SkinsTabButton.Font = Enum.Font.SourceSansBold
		SkinsTabButton.TextSize = 14
		table.insert(translatableObjects, {object = SkinsTabButton, property = "Text", key = "tab_skins"})

		local SkinsPage = Instance.new("Frame", PagesContainer)
		SkinsPage.Name = "SkinsPage"
		SkinsPage.Size = UDim2.new(1, 0, 1, 0)
		SkinsPage.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		SkinsPage.BorderSizePixel = 0
		SkinsPage.Visible = false

		local SkinsContent = Instance.new("ScrollingFrame", SkinsPage)
		SkinsContent.Name = "SkinsContent"
		SkinsContent.Size = UDim2.new(1, -20, 1, -20)
		SkinsContent.Position = UDim2.new(0.5, -SkinsContent.AbsoluteSize.X / 2, 0.5, -SkinsContent.AbsoluteSize.Y / 2)
		SkinsContent.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		SkinsContent.BorderSizePixel = 1
		SkinsContent.BorderColor3 = Color3.fromRGB(50, 50, 50)
		SkinsContent.ScrollBarImageColor3 = currentTheme.accent
		SkinsContent.ScrollBarThickness = 6
		
		local SkinsListLayout = Instance.new("UIListLayout", SkinsContent)
		SkinsListLayout.Padding = UDim.new(0, 10)
		SkinsListLayout.SortOrder = Enum.SortOrder.LayoutOrder

		local function createSkinButton(textKey, onClick)
			local button = Instance.new("TextButton", SkinsContent)
			button.Name = textKey
			button.Size = UDim2.new(1, 0, 0, 40)
			button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
			button.Font = Enum.Font.SourceSans
			button.TextSize = 16
			button.TextColor3 = Color3.fromRGB(220, 220, 220)
			Instance.new("UICorner", button).CornerRadius = UDim.new(0, 4)
			table.insert(translatableObjects, {object = button, property = "Text", key = textKey})
			
			if onClick then
				button.MouseButton1Click:Connect(onClick)
			end
			return button
		end

		createSkinButton("skin_coolkidd", function()
			-- –°–Æ–î–ê –í–°–¢–ê–í–¨–¢–ï –í–ê–® –°–ö–†–ò–ü–¢ –î–õ–Ø –°–ö–ò–ù–ê C00LKIDD
			print("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Å–∫–∏–Ω C00LKIDD")
			-- –ü—Ä–∏–º–µ—Ä: loadstring(game:HttpGet("https://example.com/coolkidd_skin.lua"))()
		end)

		createSkinButton("skin_johndoe", function()
			-- –°–Æ–î–ê –í–°–¢–ê–í–¨–¢–ï –í–ê–® –°–ö–†–ò–ü–¢ –î–õ–Ø –°–ö–ò–ù–ê JOHNDOE
			print("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Å–∫–∏–Ω JOHNDOE")
		end)

		createSkinButton("skin_hack_wilson", function()
			-- –°–Æ–î–ê –í–°–¢–ê–í–¨–¢–ï –í–ê–® –°–ö–†–ò–ü–¢ –î–õ–Ø –°–ö–ò–ù–ê HACK_WILSON
			print("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Å–∫–∏–Ω HACK_WILSON")
		end)
		-- ================================================================= --
		-- [+] –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ö–û–î–ê
		-- ================================================================= --

		-- –õ–û–ì–ò–ö–ê –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –í–ö–õ–ê–î–û–ö
		local function selectTab(selectedButton)
			for _, button in ipairs(TabsContainer:GetChildren()) do
				if button:IsA("TextButton") then
					button.TextColor3 = Color3.fromRGB(180, 180, 180) -- –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ü–≤–µ—Ç
				end
			end
			selectedButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- –ê–∫—Ç–∏–≤–Ω—ã–π —Ü–≤–µ—Ç
			
			for _, page in ipairs(PagesContainer:GetChildren()) do
				if page:IsA("Frame") then
					page.Visible = false
				end
			end
			
			if selectedButton == HomeTabButton then
				HomePage.Visible = true
			elseif selectedButton == ScriptsTabButton then
				ScriptsPage.Visible = true
            -- ================================================================= --
            -- [+] –ù–ê–ß–ê–õ–û –ù–û–í–û–ì–û –ö–û–î–ê: –õ–û–ì–ò–ö–ê –î–õ–Ø –í–ö–õ–ê–î–ö–ò SKINS
            -- ================================================================= --
			elseif selectedButton == SkinsTabButton then
				SkinsPage.Visible = true
            -- ================================================================= --
            -- [+] –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ö–û–î–ê
            -- ================================================================= --
			end
			activeTab = selectedButton
		end
		
		HomeTabButton.MouseButton1Click:Connect(function() selectTab(HomeTabButton) end)
		ScriptsTabButton.MouseButton1Click:Connect(function() selectTab(ScriptsTabButton) end)
		-- ================================================================= --
		-- [+] –ù–ê–ß–ê–õ–û –ù–û–í–û–ì–û –ö–û–î–ê: –ö–õ–ò–ö –î–õ–Ø –í–ö–õ–ê–î–ö–ò SKINS
		-- ================================================================= --
		SkinsTabButton.MouseButton1Click:Connect(function() selectTab(SkinsTabButton) end)
		-- ================================================================= --
		-- [+] –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ö–û–î–ê
		-- ================================================================= --
		
		selectTab(HomeTabButton) -- –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
	end)
end)

-- 3. –ê–ù–ò–ú–ê–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò
applyLanguage(settings.language)
local loadDuration = 3
for i = 0, 100 do
	local progress = i / 100
	local numDots = math.floor(i / 12) % 4
	if LoadingLabel and LoadingLabel.Parent then
		local langCode = languageMap[settings.language] or "en"
		local baseLoadingText = translations.loading[langCode] or translations.loading.en
		LoadingLabel.Text = baseLoadingText .. string.rep(".", numDots)
	end
	PercentageLabel.Text = i .. " %"
	ProgressBarFill.Size = UDim2.new(progress, 0, 1, 0)
	task.wait(loadDuration / 100)
end
task.wait(0.2)

-- 4. –ó–ê–í–ï–†–®–ï–ù–ò–ï
LoadingGui:Destroy()
local WilsonHubGui = player.PlayerGui:FindFirstChild("WilsonHubGui")
if WilsonHubGui then
	WilsonHubGui.Enabled = true
end
sendTranslatedNotification("notif_welcome_title", "notif_welcome_text", 7, "notif_welcome_button")
